# -*- coding: utf-8 -*-
"""Untitled34.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10phRTJ5Z1grU6sm7ri0V0UrKqHAZ5R6i

Ce code genere la courbe de regression linéaire des données du capteur pression en fonction des valeurs du manometre.

*Capteur avec bornier bleu et vert*
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import linregress

# Données extraites du fichier PDF
capteur_bars = np.array([
    0.0735, 0.4012, 0.5821, 0.2323, 0.4309, 0.1716, 0.3160, 0.7987, 0.2136, 0.9207,
    1.041, 0.3667, 0.4301, 1.1972, 0.5118, 0.2503, 0.1847, 0.1726, 0.1001, 0.1493,
    0.2806, 0.1236, 0.2557, 0.3035, 0.1957, 0.2874, 0.2686, 0.4015, 0.3767, 0.4975,
    0.5288, 0.4165, 0.3527, 0.3268, 0.5494, 0.4367, 0.5102, 0.5821, 0.6588, 0.5102,
    0.5821, 0.6588, 0.6472, 0.6978, 0.7376, 0.6792, 0.6187, 0.5964, 0.6217, 0.6739,
    0.7272, 0.7646, 0.7754, 0.8, 0.9200, 0.0683, 0.9018, 0.9627, 0.8428, 0.8315,
    0.9462, 0.9749, 0.9934, 1.0121, 1.0346, 1.07172, 1.0902, 1.1176, 1.1329, 1.1713,
    1.1877, 1.2175, 1.2372, 1.2655, 1.0501, 1.2777, 1.3643, 1.3385, 1.3075, 1.2935,
    1.3524, 1.3719, 1.3872, 1.4093, 1.4387, 1.4896, 1.4623, 1.4773, 1.5125, 1.525,
    1.5692, 1.5984, 1.5912, 1.5532
])

manometre_mbar = np.array([
    0, 135, 210, 65, 110, 40, 100, 300, 58, 350, 400, 121, 110, 465, 180, 72, 45, 40,
    10, 30, 85, 20, 75, 95, 50, 88, 80, 135, 125, 175, 188, 141, 115, 104, 197, 150,
    180, 210, 242, 180, 210, 242, 237, 258, 274, 250, 225, 216, 226, 248, 270, 285,
    290, 300, 350, 0, 345, 365, 320, 315, 363, 375, 383, 390, 400, 415, 422, 433, 440,
    455, 463, 475, 483, 495, 406, 500, 535, 525, 512, 506, 530, 538, 544, 555, 565,
    586, 575, 580, 595, 600, 618, 631, 628, 613
])

# Conversion des valeurs du manomètre en bars (1 bar = 1000 mbar)
manometre_bars = manometre_mbar / 1000


# Régression linéaire (linregress)
slope, intercept, r_value, p_value, std_err = linregress(manometre_bars, capteur_bars)

# Générer des valeurs pour la courbe de régression
manometre_fit = np.linspace(min(manometre_bars), max(manometre_bars), 100)
capteur_fit = slope * manometre_fit + intercept # y = ax + b où b est l'intercept determiner par la fonction linregress et slope coeff de regression


plt.scatter(manometre_bars, capteur_bars, color='blue', label="Données réelles")
plt.plot(manometre_fit, capteur_fit, color='red', label=f"Régression linéaire\ny = {slope:.4f}x + {intercept:.4f}")
plt.xlabel("Manomètre (bar)")
plt.ylabel("Capteur (bar)")
plt.title("Courbe de régression")
plt.legend()
plt.grid()
plt.show()
print("coeff de regression", slope)

"""**Code pour le capteur pression2 (bornier Bleu/Bleu)**"""

from scipy.stats import linregress
manometre_mbar2 = np.array([
    0, 135, 210, 65, 110, 40, 100, 300, 58, 350, 400, 121, 110, 465, 180, 72, 45, 40, 10, 30,
    85, 20, 75, 95, 50, 88, 80, 135, 125, 175, 188, 141, 115, 104, 197, 150, 180, 210, 242, 180,
    210, 242, 237, 258, 274, 250, 225, 216, 226, 248, 270, 285, 290, 300, 350, 0, 345, 365, 320,
    315, 363, 375, 383, 390, 400, 415, 422, 433, 440, 455, 463, 475, 483, 495, 406, 500, 535, 525,
    512, 506, 530, 538, 544, 555, 565, 586, 575, 580, 595, 600, 618, 631, 628, 613
])

capteur_bars2 = np.array([
    0.0525, 0.3786, 0.5608, 0.2084, 0.3172, 0.1473, 0.2932, 0.7776, 0.1926, 0.8985, 1.0184, 0.3453,
    0.3175, 1.634, 0.4872, 0.2263, 0.1621, 0.1487, 0.0758, 0.1253, 0.2576, 0.1015, 0.2348, 0.2826,
    0.1747, 0.2645, 0.2468, 0.3789, 0.3557, 0.4774, 0.5057, 0.3943, 0.3312, 0.3045, 0.5396, 0.4159,
    0.4872, 0.5595, 0.6362, 0.4872, 0.5595, 0.6362, 0.6247, 0.6756, 0.7139, 0.6568, 0.5963, 0.5715,
    0.6217, 0.6739, 0.7272, 0.7646, 0.7754, 0.8, 0.9200, 0.0683, 0.9018, 0.9627, 0.8428, 0.8315,
    0.9462, 0.9749, 0.9934, 1.0121, 1.0346, 1.07172, 1.0902, 1.1176, 1.1329, 1.1713, 1.1877, 1.2175,
    1.2372, 1.2655, 1.0501, 1.2777, 1.3643, 1.3385, 1.3075, 1.2935, 1.3524, 1.3719, 1.3872, 1.4093,
    1.4387, 1.4896, 1.4623, 1.4773, 1.5125, 1.525, 1.5692, 1.5984, 1.5912, 1.5532
])

# Conversion des valeurs du manomètre en bars (1 bar = 1000 mbar)
manometre_bars2 = manometre_mbar2 / 1000

# Régression linéaire (linregress)
slope2, intercept2, r_value2, p_value2, std_err2 = linregress(manometre_bars2, capteur_bars2)

# Générer des valeurs pour la courbe de régression
manometre_fit2 = np.linspace(min(manometre_bars2), max(manometre_bars2), 100)
capteur_fit2 = slope2 * manometre_fit2 + intercept2

# Tracé des données et de la régression
plt.scatter(manometre_bars2, capteur_bars2, color='blue', label="Données réelles")
plt.plot(manometre_fit2, capteur_fit2, color='red', label=f"Régression linéaire\ny = {slope2:.4f}x + {intercept2:.4f}")
plt.xlabel("Manomètre (bar)")
plt.ylabel("Capteur (bar)")
plt.title("Courbe de régression")
plt.legend()
plt.grid()
plt.show()

print("Coefficient de régression:", slope2)